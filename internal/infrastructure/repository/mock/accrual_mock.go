// Code generated by MockGen. DO NOT EDIT.
// Source: accrual.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/bjlag/go-loyalty/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockAccrualRepository is a mock of AccrualRepository interface.
type MockAccrualRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualRepositoryMockRecorder
}

// MockAccrualRepositoryMockRecorder is the mock recorder for MockAccrualRepository.
type MockAccrualRepositoryMockRecorder struct {
	mock *MockAccrualRepository
}

// NewMockAccrualRepository creates a new mock instance.
func NewMockAccrualRepository(ctrl *gomock.Controller) *MockAccrualRepository {
	mock := &MockAccrualRepository{ctrl: ctrl}
	mock.recorder = &MockAccrualRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualRepository) EXPECT() *MockAccrualRepositoryMockRecorder {
	return m.recorder
}

// AccrualByOrderNumber mocks base method.
func (m *MockAccrualRepository) AccrualByOrderNumber(ctx context.Context, orderNumber string) (*model.Accrual, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccrualByOrderNumber", ctx, orderNumber)
	ret0, _ := ret[0].(*model.Accrual)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AccrualByOrderNumber indicates an expected call of AccrualByOrderNumber.
func (mr *MockAccrualRepositoryMockRecorder) AccrualByOrderNumber(ctx, orderNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccrualByOrderNumber", reflect.TypeOf((*MockAccrualRepository)(nil).AccrualByOrderNumber), ctx, orderNumber)
}

// AccrualsByUser mocks base method.
func (m *MockAccrualRepository) AccrualsByUser(ctx context.Context, userGUID string) ([]model.Accrual, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccrualsByUser", ctx, userGUID)
	ret0, _ := ret[0].([]model.Accrual)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AccrualsByUser indicates an expected call of AccrualsByUser.
func (mr *MockAccrualRepositoryMockRecorder) AccrualsByUser(ctx, userGUID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccrualsByUser", reflect.TypeOf((*MockAccrualRepository)(nil).AccrualsByUser), ctx, userGUID)
}

// Insert mocks base method.
func (m *MockAccrualRepository) Insert(ctx context.Context, accrual *model.Accrual) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", ctx, accrual)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockAccrualRepositoryMockRecorder) Insert(ctx, accrual interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockAccrualRepository)(nil).Insert), ctx, accrual)
}
